% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/knn.R
\name{basic_knn}
\alias{basic_knn}
\title{k-nearest neighbours imputation for continuous variables, based on a single vector}
\usage{
basic_knn(x, k = 3, value, group)
}
\arguments{
\item{x}{data frame of data containing continuous variable to be imputed. Should be
arranged, as nearest neighbours are based on relative indices.}

\item{k}{number of nearest neighbours. Defaults to 3.}

\item{value}{name of variable containing missing values}

\item{group}{optional name of variable containing classification groups to split on.
This is to ensure that nearest-neighbours are sourced from the same classification
group, not an adjacent one.}
}
\value{
data frame with imputed values.
Question: Does a second imputed
value depend on a first? That is, if a value is imputed, can it be used to impute
another value?
}
\description{
k-nearest neighbours imputation for continuous variables, based on a single vector
}
\details{
Yeah we're a little light on these at the mo. This is just a really simple
implementation of k-nearest neighbours that only takes into account the variable that
is being imputed (i.e., does not find nearest neighbours based on other grouping
variables) and assumes the data frame is sorted such that relative indices are used
to approximate nearest neighbours. Data should be in a long
format. If there are two equal-distance nearest neighbours but only one can be taken through,
a random one is chosen.
}
\examples{
# make a random 10\% of iris Sepal.Length observations NA
iris_nas <- iris
iris_nas[sample(nrow(iris), size = 0.1 * nrow(iris)), "Sepal.Length"] <- NA
# impute with 3-nearest neighbours
basic_knn(iris_nas, k = 3, value = "Sepal.Length", group = "Species")
}
